/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Article;
import hr.algebra.parsers.rss.ArticleParser;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.xml.stream.XMLStreamException;

/**
 *
 * @author doss
 */
public class UploadArticlesPanel extends javax.swing.JPanel {

    private DefaultListModel<Article> model;
    private Repository repository;
    /**
     * Creates new form UploadPanel
     */
    public UploadArticlesPanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spArticles = new javax.swing.JScrollPane();
        lsArticles = new javax.swing.JList();
        btUpload = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1192, 769));
        setLayout(new java.awt.BorderLayout());

        spArticles.setViewportView(lsArticles);

        add(spArticles, java.awt.BorderLayout.CENTER);

        btUpload.setText("Upload Articles");
        btUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUploadActionPerformed(evt);
            }
        });
        add(btUpload, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUploadActionPerformed
        try {
            List<Article> articles = ArticleParser.parse();
            repository.createArticles(articles);
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(UploadArticlesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btUploadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btUpload;
    private javax.swing.JList lsArticles;
    private javax.swing.JScrollPane spArticles;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            repository = RepositoryFactory.getRepository();
            model = new DefaultListModel<>(); 
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(UploadArticlesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadModel() throws Exception {
        List<Article> articles = repository.selectArticles();
        model.clear();
        articles.forEach(model::addElement);
        lsArticles.setModel(model);
    }
}
